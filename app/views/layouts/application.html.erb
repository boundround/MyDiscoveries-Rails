<!DOCTYPE html>
<html lang="en" ng-App="boundRound">
<% if not @placeprograms %>
	<head>
	  <title><%= full_title(yield(:title)) %></title>

	  <%= stylesheet_link_tag( 'application', media: 'all') %>
		<!--%= @set_css ? stylesheet_link_tag(@set_css) : stylesheet_link_tag("br/custom.css") %-->
	  <%= csrf_meta_tags %>

	  <link href="//maxcdn.bootstrapcdn.com/font-awesome/4.1.0/css/font-awesome.min.css" rel="stylesheet">
	  <link href='//fonts.googleapis.com/css?family=Signika:300,400,600,700' rel='stylesheet' type='text/css'>
	  <link href='//fonts.googleapis.com/css?family=Handlee' rel='stylesheet' type='text/css'>

	 <!-- HTML5 shim and Respond.js for IE8 support of HTML5 elements and media queries -->
	 <!-- WARNING: Respond.js doesn't work if you view the page via file:// -->
	 <!--[if lt IE 9]>
	   <script src="https://oss.maxcdn.com/html5shiv/3.7.2/html5shiv.min.js"></script>
	   <script src="https://oss.maxcdn.com/respond/1.4.2/respond.min.js"></script>
	 <![endif]-->

		<link rel="apple-touch-icon" sizes="57x57" href="<%= asset_path('favicons/apple-touch-icon-57x57.png')%>"
		<link rel="apple-touch-icon" sizes="60x60" href="<%= asset_path('favicons/apple-touch-icon-60x60.png')%>"
		<link rel="apple-touch-icon" sizes="72x72" href="<%= asset_path('favicons/apple-touch-icon-72x72.png')%>"
		<link rel="apple-touch-icon" sizes="76x76" href="<%= asset_path('favicons/apple-touch-icon-76x76.png')%>"
		<link rel="apple-touch-icon" sizes="114x114" href="<%= asset_path('favicons/apple-touch-icon-114x114.png')%>"
		<link rel="apple-touch-icon" sizes="120x120" href="<%= asset_path('favicons/apple-touch-icon-120x120.png')%>"
		<link rel="apple-touch-icon" sizes="144x144" href="<%= asset_path('favicons/apple-touch-icon-144x144.png')%>"
		<link rel="icon" type="image/png" href="<%= asset_path('favicons/favicon-32x32.png')%>" sizes="32x32">
		<link rel="icon" type="image/png" href="<%= asset_path('favicons/favicon-96x96.png')%>" sizes="96x96">
		<link rel="icon" type="image/png" href="<%= asset_path('favicons/favicon-16x16.png')%>" sizes="16x16">
		<link rel="manifest" href="<%= asset_path('favicons/manifest.json')%>"
		<meta name="msapplication-TileColor" content="#da532c">
		<meta name="msapplication-TileImage" content="<%= asset_path('favicons/mstile-144x144.png')%>"
		<meta name="theme-color" content="#ffffff">

	  <meta name="viewport" content="width=device-width,
	                                     initial-scale=1.0,
	                                     maximum-scale=1.0,
	                                     user-scalable=no">
	  <%= raw open_graph_image %>
	  <%= render "/layouts/ga" %>

    <style>
        html,
        body {
            height: 100%;
            margin: 0;
            /*background-color: black;*/
        }

        #home-map-wrapper,
        #home-map {
            height: 100%;
            width: 100%;
            position: absolute;
        }
        /*.blur {
        opacity: .5; -webkit-filter: blur(5px); -moz-filter: blur(5px); -o-filter: blur(5px); -ms-filter: blur(5px); filter: blur(5px);
      }*/

        #info-box {
            background-color: white;
            border: 1px solid black;
            top: 30px;
            height: 200px;
            padding: 10px;
            position: absolute;
            right: 30px;
        }

        .home-map-wrapper .overlay {
            position: absolute;
            width: 100%;
            height: 100%;
            z-index: 9;
            display: block;
            top: 0;
            left: 0;
            z-index: 000;
            opacity: 0;
        }

        .home-map-wrapper.enabled .overlay {
            display: none;
        }

        .no-bg {
            background: transparent !important;
        }
    </style>

	</head>

	<body class="<%= @set_body_class ? @set_body_class : 'homepage' %>">
		<%= javascript_include_tag 'mapbox' %>
    <%= javascript_include_tag 'application' %>
    <script src="//ajax.googleapis.com/ajax/libs/webfont/1.5.18/webfont.js"></script>
    <script src="//maps.googleapis.com/maps/api/js?sensor=false&amp;libraries=places"></script>
    <%= javascript_include_tag 'froogaloop' %>
    <script src="//cdn.jsdelivr.net/algoliasearch/3/algoliasearch.min.js"></script>
    <script src="//cdn.jsdelivr.net/algoliasearch.helper/2/algoliasearch.helper.min.js"></script>
    <script src="//cdn.jsdelivr.net/hogan.js/3.0.2/hogan.min.common.js"></script>



		<div id="place-holder"></div>
	  <%= render "/layouts/page_loader" %>
	  <% flash.each do |type, message| %>
		  <div class="alert <%= bootstrap_class_for(type) %> fade in">
		    <button class="close" data-dismiss="alert">Ã—</button>
		    <%= message %>
		  </div>
		<% end %>
		<div class="alert-wrapper"></div>

		<%= render "/layouts/admin_menu" %>

	  <div class="app-wrap">
	    <%= yield %>
	  </div>
	  <%= render "/layouts/signin_modals" %>

	  <%= render "/layouts/share_modal" %>

    <script>
    (function(){
      var APPLICATION_ID = 'KXOYK344AM';
      var SEARCH_ONLY_API_KEY = 'fce29aca7a9b823b9cacdbc1faa225e2';
      var INDEX_NAME = 'place';
      var PARAMS = {
        hitsPerPage: 6,
        maxValuesPerFacet: 8,
      };
			
			var br_place_markerCluster = null;

      var algolia = algoliasearch(APPLICATION_ID, SEARCH_ONLY_API_KEY);
      var algoliaHelper = algoliasearchHelper(algolia, INDEX_NAME, PARAMS);

      $searchInput = $('#search-box');
      $searchInputIcon = $('#search-button');
      $main = $('main');
      $sortBySelect = $('#sort-by-select');
      $hits = $('#hits');
      $stats = $('#stats');
      $facets = $('#facets');
      $pagination = $('#pagination');

      var hitTemplate = Hogan.compile($('#hit-template').text());
      var statsTemplate = Hogan.compile($('#stats-template').text());
      var facetTemplate = Hogan.compile($('#facet-template').text());
      var sliderTemplate = Hogan.compile($('#slider-template').text());
      var paginationTemplate = Hogan.compile($('#pagination-template').text());
      var noResultsTemplate = Hogan.compile($('#no-results-template').text());

      $searchInput
      .on('keyup', function() {
        var query = $(this).val();
        console.log(query);
        if (query.length > 0){
          $('.br15_search_result').show();
          algoliaHelper.setQuery(query);
          algoliaHelper.search();
        } else {
          $('.br15_search_result').hide();
          //animate map overlay
        }
      })
      .focus();

      $searchInput.on("click", function(){
        // animate map overlay
      });
      // Search results
      algoliaHelper.on('result', function(content, state) {
        console.log(content);
        renderHits(content);
				
				// size of icon on the map
				var scaleRatio = 1.0;
				var originalWidthOfIcon = window.thirdFloor.iconBuilder.CANVAS_DEFAULT_WIDTH;
				var originalHeightOfIcon = window.thirdFloor.iconBuilder.CANVAS_DEFAULT_HEIGHT;
				var scaledWidthOfIcon = originalWidthOfIcon * scaleRatio;
				var scaledHeightOfIcon = originalHeightOfIcon * scaleRatio;

				var anchorOfIcon = new google.maps.Point(scaledWidthOfIcon * 0.5, scaledHeightOfIcon + 0);
				var scaledSizeOfIcon = new google.maps.Size(scaledWidthOfIcon, scaledHeightOfIcon);

				window.br_place_markers = window.createMarkerArrayFromAlgolia(content, "", true, scaledSizeOfIcon, anchorOfIcon);
				
				var bounds = new google.maps.LatLngBounds();
				for(i=0;i<br_place_markers.length;i++) {
				 bounds.extend(br_place_markers[i].getPosition());
				}

				br_map.fitBounds(bounds);
        renderStats(content);
        renderPagination(content);
/*	
				br_place_markerCluster ? br_place_markerCluster.clearMarkers();
				
				br_place_markerCluster = new MarkerClusterer(br_map, br_place_markers, {
					maxZoom: 14,
					ignoreHidden: false,
					gridSize: 10,
					styles: [{
						url: '../google_home/cluster28yellow.png',
						height: 28,
						width: 28,
						anchor: [0, 0],
						textColor: '#000000',
						textSize: 10
					}]
				});
				setTimeout(function(){window.br_place_markerCluster.repaint();},3000);
*/				
				/* Add MAP functions here */
      });

      function renderHits(content) {
        console.log("rendering hits");
        $hits.html(hitTemplate.render(content));
      }

      function renderStats(content) {
        var stats = {
          nbHits: content.nbHits,
          nbHits_plural: content.nbHits !== 1,
          processingTimeMS: content.processingTimeMS
        };
        $stats.html(statsTemplate.render(stats));
      }

      function renderPagination(content) {
        var pages = [];
        if (content.page > 3) {
          pages.push({current: false, number: 1});
          pages.push({current: false, number: '...', disabled: true});
        }
        for (var p = content.page - 3; p < content.page + 3; ++p) {
          if (p < 0 || p >= content.nbPages) continue;
          pages.push({current: content.page === p, number: p + 1});
        }
        if (content.page + 3 < content.nbPages) {
          pages.push({current: false, number: '...', disabled: true});
          pages.push({current: false, number: content.nbPages});
        }
        var pagination = {
          pages: pages,
          prev_page: content.page > 0 ? content.page : false,
          next_page: content.page + 1 < content.nbPages ? content.page + 2 : false
        };
        $pagination.html(paginationTemplate.render(pagination));
      }

      // NO RESULTS
      // ==========

      function handleNoResults(content) {
        if (content.nbHits > 0) {
          $main.removeClass('no-results');
          return;
        }
        $main.addClass('no-results');

        var filters = [];
        var i;
        var j;
        for (i in algoliaHelper.state.facetsRefinements) {
          filters.push({
            class: 'toggle-refine',
            facet: i, facet_value: algoliaHelper.state.facetsRefinements[i],
            label: FACETS_LABELS[i] + ': ',
            label_value: algoliaHelper.state.facetsRefinements[i]
          });
        }
        for (i in algoliaHelper.state.disjunctiveFacetsRefinements) {
          for (j in algoliaHelper.state.disjunctiveFacetsRefinements[i]) {
            filters.push({
              class: 'toggle-refine',
              facet: i,
              facet_value: algoliaHelper.state.disjunctiveFacetsRefinements[i][j],
              label: FACETS_LABELS[i] + ': ',
              label_value: algoliaHelper.state.disjunctiveFacetsRefinements[i][j]
            });
          }
        }
        for (i in algoliaHelper.state.numericRefinements) {
          for (j in algoliaHelper.state.numericRefinements[i]) {
            filters.push({
              class: 'remove-numeric-refine',
              facet: i,
              facet_value: j,
              label: FACETS_LABELS[i] + ' ',
              label_value: j + ' ' + algoliaHelper.state.numericRefinements[i][j]
            });
          }
        }
        $hits.html(noResultsTemplate.render({query: content.query, filters: filters}));
      }

      $(document).on('click', '.go-to-page', function(e) {
        e.preventDefault();
        // $('html, body').animate({scrollTop: 0}, '500', 'swing');
        algoliaHelper.setCurrentPage(+$(this).data('page') - 1).search();
      });

      var googlePlaceSearch = function(request, response) {
        function initialize() {
          var service = new google.maps.places.AutocompleteService();
          service.getPlacePredictions({ input: request.term }, callback);
        }

        function callback(predictions, status) {
          if (status != google.maps.places.PlacesServiceStatus.OK) {
            console.log(status);
            return;
          }
          response( $.map( predictions, function( item ) {
            return {
              label: item.description,
              value: item.description,
              lat: -33.865143,
              lng: 151.2099,
              resultType: 'Google',
              placeId: item.place_id
            }
          }));
        }
        initialize();
      }

    })();

    </script>
	</body>



<% elsif @placeprograms %>

	    <%= yield %>

<% end %>
</html>
